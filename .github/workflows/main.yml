name: Continuous Integration

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11, 3.12]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-20.04
            python-version: 3.5
          - os: ubuntu-20.04
            python-version: 3.6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup build and test environment
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Build Python Package
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install .
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 --show-source colorful/ tests/
      - name: Test with pytest
        run: |
          coverage run --parallel -m pytest
      - name: Report code coverage
        run: |
          coverage combine
          coverage report
          coverage xml
      - name: Upload coverage to Codecov
        # codecov only runs on Linux
        if: startsWith(matrix.os, 'ubuntu-')
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  publish:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        if: startsWith(github.event.ref, 'refs/tags')
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Build Package
        if: startsWith(github.event.ref, 'refs/tags')
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python setup.py sdist bdist_wheel --universal
      - name: Publish Package on PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
